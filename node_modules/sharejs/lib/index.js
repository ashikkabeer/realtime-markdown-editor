'use strict';

var _Object$keys = require('babel-runtime/core-js/object/keys')['default'];

var _Promise = require('babel-runtime/core-js/promise')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});
exports.configure = configure;
exports.ready = ready;
exports.share = share;
exports.createCallback = createCallback;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _sdk = require('./sdk');

var _sdk2 = _interopRequireDefault(_sdk);

var _share = require('./share');

var _share2 = _interopRequireDefault(_share);

var _utils = require('./utils');

var allConfigurePromises = {};

function configure(config) {
    var promises = [];

    _Object$keys(config).forEach(function (k) {
        var promise = (0, _sdk2['default'])(k, config[k]);

        promises.push(promise);
        allConfigurePromises[k] = allConfigurePromises[k] || [];
        allConfigurePromises[k].push(promise);
    });

    return _Promise.all(promises);
}

function ready(network) {
    var promises = [];

    if (network) {
        var channel = (0, _share.getChannel)(network);

        if (channel.sdk) promises = allConfigurePromises[channel.sdk] || [];
    } else {
        promises = _lodash2['default'].reduce(allConfigurePromises, function (aggregate, p) {
            return aggregate.concat(p);
        }, []);
    }

    return _Promise.all(promises);
}

function share(network) {
    var attributes = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    return (0, _share2['default'])(network, attributes);
}

function createCallback(network) {
    var attributes = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    return function (e) {
        var attr = e && e.target ? _lodash2['default'].merge(attributes, (0, _utils.extractAttributesFromElement)(e.target)) : attributes;
        share(network, attr);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7c0JBRUMsUUFBUTs7OzttQkFDRixPQUFPOzs7O3FCQUNTLFNBQVM7Ozs7cUJBQ2UsU0FBUzs7QUFFckUsSUFBTSxvQkFBb0IsR0FBRyxFQUFFLENBQUM7O0FBTWhDLFNBQVMsU0FBUyxDQUFFLE1BQU0sRUFBRztBQUN6QixRQUFNLFFBQVEsR0FBRyxFQUFFLENBQUM7O0FBRXBCLGlCQUFZLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFDLENBQUMsRUFBSztBQUMvQixZQUFNLE9BQU8sR0FBRyxzQkFBUSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7O0FBRXRDLGdCQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3ZCLDRCQUFvQixDQUFDLENBQUMsQ0FBQyxHQUFHLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN4RCw0QkFBb0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDekMsQ0FBQyxDQUFDOztBQUVILFdBQU8sU0FBUSxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7Q0FDaEM7O0FBT0QsU0FBUyxLQUFLLENBQUUsT0FBTyxFQUFHO0FBQ3RCLFFBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQzs7QUFFbEIsUUFBSSxPQUFPLEVBQUU7QUFDVCxZQUFNLE9BQU8sR0FBRyx1QkFBVyxPQUFPLENBQUMsQ0FBQzs7QUFFcEMsWUFBSSxPQUFPLENBQUMsR0FBRyxFQUNYLFFBQVEsR0FBRyxvQkFBb0IsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO0tBQzFELE1BQU07QUFDSCxnQkFBUSxHQUFHLG9CQUFFLE1BQU0sQ0FBQyxvQkFBb0IsRUFBRSxVQUFDLFNBQVMsRUFBRSxDQUFDLEVBQUs7QUFDeEQsbUJBQU8sU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUM5QixFQUFFLEVBQUUsQ0FBQyxDQUFDO0tBQ1Y7O0FBRUQsV0FBTyxTQUFRLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztDQUNoQzs7QUFNRCxTQUFTLEtBQUssQ0FBRSxPQUFPLEVBQW9CO1FBQWxCLFVBQVUseURBQUcsRUFBRTs7QUFDcEMsV0FBTyx3QkFBUSxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7Q0FDdkM7O0FBTUQsU0FBUyxjQUFjLENBQUUsT0FBTyxFQUFvQjtRQUFsQixVQUFVLHlEQUFHLEVBQUU7O0FBQzdDLFdBQU8sVUFBQyxDQUFDLEVBQUs7QUFDVixZQUFNLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sR0FBRyxvQkFBRSxLQUFLLENBQUMsVUFBVSxFQUFFLHlDQUFZLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLFVBQVUsQ0FBQztBQUNyRixhQUFLLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQ3hCLENBQUM7Q0FDTCIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBsb2FkU2RrIGZyb20gJy4vc2RrJztcbmltcG9ydCBkb1NoYXJlLCB7IGdldENoYW5uZWwgfSBmcm9tICcuL3NoYXJlJztcbmltcG9ydCB7IGV4dHJhY3RBdHRyaWJ1dGVzRnJvbUVsZW1lbnQgYXMgZnJvbUVsZW1lbnQgfSBmcm9tICcuL3V0aWxzJztcblxuY29uc3QgYWxsQ29uZmlndXJlUHJvbWlzZXMgPSB7fTtcblxuLyoqXG4gKiBDb25maWd1cmUgYW5kIGluaXRpYWxpemUgc29jaWFsIG5ldHdvcmsgU0RLJ3NcbiAqL1xuZXhwb3J0XG5mdW5jdGlvbiBjb25maWd1cmUoIGNvbmZpZyApIHtcbiAgICBjb25zdCBwcm9taXNlcyA9IFtdO1xuXG4gICAgT2JqZWN0LmtleXMoY29uZmlnKS5mb3JFYWNoKChrKSA9PiB7XG4gICAgICAgIGNvbnN0IHByb21pc2UgPSBsb2FkU2RrKGssIGNvbmZpZ1trXSk7XG5cbiAgICAgICAgcHJvbWlzZXMucHVzaChwcm9taXNlKTtcbiAgICAgICAgYWxsQ29uZmlndXJlUHJvbWlzZXNba10gPSBhbGxDb25maWd1cmVQcm9taXNlc1trXSB8fCBbXTtcbiAgICAgICAgYWxsQ29uZmlndXJlUHJvbWlzZXNba10ucHVzaChwcm9taXNlKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XG59XG5cbi8qKlxuICogUmVxdWVzdCBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIGFsbCBjb25maWd1cmF0aW9uIGNhbGxzIGhhdmVcbiAqIGJlZW4gaGFuZGxlZFxuICovXG5leHBvcnRcbmZ1bmN0aW9uIHJlYWR5KCBuZXR3b3JrICkge1xuICAgIGxldCBwcm9taXNlcyA9IFtdO1xuXG4gICAgaWYgKG5ldHdvcmspIHtcbiAgICAgICAgY29uc3QgY2hhbm5lbCA9IGdldENoYW5uZWwobmV0d29yayk7XG5cbiAgICAgICAgaWYgKGNoYW5uZWwuc2RrKVxuICAgICAgICAgICAgcHJvbWlzZXMgPSBhbGxDb25maWd1cmVQcm9taXNlc1tjaGFubmVsLnNka10gfHwgW107XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcHJvbWlzZXMgPSBfLnJlZHVjZShhbGxDb25maWd1cmVQcm9taXNlcywgKGFnZ3JlZ2F0ZSwgcCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGFnZ3JlZ2F0ZS5jb25jYXQocCk7XG4gICAgICAgIH0sIFtdKTtcbiAgICB9XG5cbiAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xufVxuXG4vKipcbiAqIFNoYXJlIHNvbWV0aGluZ1xuICovXG5leHBvcnRcbmZ1bmN0aW9uIHNoYXJlKCBuZXR3b3JrLCBhdHRyaWJ1dGVzID0ge30gKSB7XG4gICAgcmV0dXJuIGRvU2hhcmUobmV0d29yaywgYXR0cmlidXRlcyk7XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgY2FsbGJhY2sgdG8gcGFzcyB0byBldmVudCBsaXN0ZW5lcnNcbiAqL1xuZXhwb3J0XG5mdW5jdGlvbiBjcmVhdGVDYWxsYmFjayggbmV0d29yaywgYXR0cmlidXRlcyA9IHt9ICkge1xuICAgIHJldHVybiAoZSkgPT4ge1xuICAgICAgICBjb25zdCBhdHRyID0gZSAmJiBlLnRhcmdldCA/IF8ubWVyZ2UoYXR0cmlidXRlcywgZnJvbUVsZW1lbnQoZS50YXJnZXQpKSA6IGF0dHJpYnV0ZXM7XG4gICAgICAgIHNoYXJlKG5ldHdvcmssIGF0dHIpO1xuICAgIH07XG59XG4iXX0=